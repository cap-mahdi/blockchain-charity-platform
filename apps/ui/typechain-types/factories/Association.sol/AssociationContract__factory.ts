/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AssociationContract,
  AssociationContractInterface,
} from "../../Association.sol/AssociationContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "string",
        name: "_email",
        type: "string",
      },
      {
        internalType: "string",
        name: "_phoneNumber",
        type: "string",
      },
      {
        internalType: "string",
        name: "_country",
        type: "string",
      },
      {
        internalType: "string",
        name: "_streetAddress",
        type: "string",
      },
      {
        internalType: "string",
        name: "_city",
        type: "string",
      },
      {
        internalType: "string",
        name: "_state",
        type: "string",
      },
      {
        internalType: "string",
        name: "_postalCode",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_creationDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "email",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "phoneNumber",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "country",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "streetAddress",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "city",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "state",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "postalCode",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "creationDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
    ],
    name: "AssociationContractDeployed",
    type: "event",
  },
  {
    inputs: [],
    name: "city",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "country",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creationDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "email",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAssociationDetails",
    outputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "string",
        name: "_email",
        type: "string",
      },
      {
        internalType: "string",
        name: "_phoneNumber",
        type: "string",
      },
      {
        internalType: "string",
        name: "_country",
        type: "string",
      },
      {
        internalType: "string",
        name: "_streetAddress",
        type: "string",
      },
      {
        internalType: "string",
        name: "_city",
        type: "string",
      },
      {
        internalType: "string",
        name: "_state",
        type: "string",
      },
      {
        internalType: "string",
        name: "_postalCode",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_creationDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "phoneNumber",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "postalCode",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "size",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "streetAddress",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620016f0380380620016f08339818101604052810190620000379190620002c9565b8a600090805190602001906200004f92919062000184565b5089600190805190602001906200006892919062000184565b5088600290805190602001906200008192919062000184565b5087600390805190602001906200009a92919062000184565b508660049080519060200190620000b392919062000184565b508560059080519060200190620000cc92919062000184565b508460069080519060200190620000e592919062000184565b508360079080519060200190620000fe92919062000184565b5082600890805190602001906200011792919062000184565b508160098190555080600a819055507feca0287598c139ba73472fe0224d6fffe381f4f37387c28b9330b64645e64c568b8b8b8b8b8b8b8b8b8b8b6040516200016b9b9a999897969594939291906200053f565b60405180910390a1505050505050505050505062000803565b8280546200019290620006fa565b90600052602060002090601f016020900481019282620001b6576000855562000202565b82601f10620001d157805160ff191683800117855562000202565b8280016001018555821562000202579182015b8281111562000201578251825591602001919060010190620001e4565b5b50905062000211919062000215565b5090565b5b808211156200023057600081600090555060010162000216565b5090565b60006200024b620002458462000668565b6200063f565b9050828152602081018484840111156200026a5762000269620007c9565b5b62000277848285620006c4565b509392505050565b600082601f830112620002975762000296620007c4565b5b8151620002a984826020860162000234565b91505092915050565b600081519050620002c381620007e9565b92915050565b60008060008060008060008060008060006101608c8e031215620002f257620002f1620007d3565b5b60008c015167ffffffffffffffff811115620003135762000312620007ce565b5b620003218e828f016200027f565b9b505060208c015167ffffffffffffffff811115620003455762000344620007ce565b5b620003538e828f016200027f565b9a505060408c015167ffffffffffffffff811115620003775762000376620007ce565b5b620003858e828f016200027f565b99505060608c015167ffffffffffffffff811115620003a957620003a8620007ce565b5b620003b78e828f016200027f565b98505060808c015167ffffffffffffffff811115620003db57620003da620007ce565b5b620003e98e828f016200027f565b97505060a08c015167ffffffffffffffff8111156200040d576200040c620007ce565b5b6200041b8e828f016200027f565b96505060c08c015167ffffffffffffffff8111156200043f576200043e620007ce565b5b6200044d8e828f016200027f565b95505060e08c015167ffffffffffffffff811115620004715762000470620007ce565b5b6200047f8e828f016200027f565b9450506101008c015167ffffffffffffffff811115620004a457620004a3620007ce565b5b620004b28e828f016200027f565b935050610120620004c68e828f01620002b2565b925050610140620004da8e828f01620002b2565b9150509295989b509295989b9093969950565b6000620004fa826200069e565b620005068185620006a9565b935062000518818560208601620006c4565b6200052381620007d8565b840191505092915050565b6200053981620006ba565b82525050565b60006101608201905081810360008301526200055c818e620004ed565b9050818103602083015262000572818d620004ed565b9050818103604083015262000588818c620004ed565b905081810360608301526200059e818b620004ed565b90508181036080830152620005b4818a620004ed565b905081810360a0830152620005ca8189620004ed565b905081810360c0830152620005e08188620004ed565b905081810360e0830152620005f68187620004ed565b90508181036101008301526200060d8186620004ed565b90506200061f6101208301856200052e565b6200062f6101408301846200052e565b9c9b505050505050505050505050565b60006200064b6200065e565b905062000659828262000730565b919050565b6000604051905090565b600067ffffffffffffffff82111562000686576200068562000795565b5b6200069182620007d8565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b60005b83811015620006e4578082015181840152602081019050620006c7565b83811115620006f4576000848401525b50505050565b600060028204905060018216806200071357607f821691505b602082108114156200072a576200072962000766565b5b50919050565b6200073b82620007d8565b810181811067ffffffffffffffff821117156200075d576200075c62000795565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b620007f481620006ba565b81146200080057600080fd5b50565b610edd80620008136000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063820e93f511610071578063820e93f514610177578063949d225d14610195578063a8dfd7fe146101b3578063c19d93fb146101d1578063d8b0b499146101ef578063fd0160fe1461020d576100b4565b806305b34410146100b957806306fdde03146100d757806347d90576146100f55780637284e41614610113578063747f33801461013157806379eca4311461014f575b600080fd5b6100c161022b565b6040516100ce9190610dc1565b60405180910390f35b6100df610231565b6040516100ec9190610cb5565b60405180910390f35b6100fd6102bf565b60405161010a9190610cb5565b60405180910390f35b61011b61034d565b6040516101289190610cb5565b60405180910390f35b6101396103db565b6040516101469190610cb5565b60405180910390f35b610157610469565b60405161016e9b9a99989796959493929190610cd7565b60405180910390f35b61017f6109a1565b60405161018c9190610cb5565b60405180910390f35b61019d610a2f565b6040516101aa9190610dc1565b60405180910390f35b6101bb610a35565b6040516101c89190610cb5565b60405180910390f35b6101d9610ac3565b6040516101e69190610cb5565b60405180910390f35b6101f7610b51565b6040516102049190610cb5565b60405180910390f35b610215610bdf565b6040516102229190610cb5565b60405180910390f35b60095481565b6000805461023e90610e35565b80601f016020809104026020016040519081016040528092919081815260200182805461026a90610e35565b80156102b75780601f1061028c576101008083540402835291602001916102b7565b820191906000526020600020905b81548152906001019060200180831161029a57829003601f168201915b505050505081565b600580546102cc90610e35565b80601f01602080910402602001604051908101604052809291908181526020018280546102f890610e35565b80156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b505050505081565b6001805461035a90610e35565b80601f016020809104026020016040519081016040528092919081815260200182805461038690610e35565b80156103d35780601f106103a8576101008083540402835291602001916103d3565b820191906000526020600020905b8154815290600101906020018083116103b657829003601f168201915b505050505081565b600380546103e890610e35565b80601f016020809104026020016040519081016040528092919081815260200182805461041490610e35565b80156104615780601f1061043657610100808354040283529160200191610461565b820191906000526020600020905b81548152906001019060200180831161044457829003601f168201915b505050505081565b6060806060806060806060806060600080600060016002600360046005600660076008600954600a548a805461049e90610e35565b80601f01602080910402602001604051908101604052809291908181526020018280546104ca90610e35565b80156105175780601f106104ec57610100808354040283529160200191610517565b820191906000526020600020905b8154815290600101906020018083116104fa57829003601f168201915b50505050509a5089805461052a90610e35565b80601f016020809104026020016040519081016040528092919081815260200182805461055690610e35565b80156105a35780601f10610578576101008083540402835291602001916105a3565b820191906000526020600020905b81548152906001019060200180831161058657829003601f168201915b505050505099508880546105b690610e35565b80601f01602080910402602001604051908101604052809291908181526020018280546105e290610e35565b801561062f5780601f106106045761010080835404028352916020019161062f565b820191906000526020600020905b81548152906001019060200180831161061257829003601f168201915b5050505050985087805461064290610e35565b80601f016020809104026020016040519081016040528092919081815260200182805461066e90610e35565b80156106bb5780601f10610690576101008083540402835291602001916106bb565b820191906000526020600020905b81548152906001019060200180831161069e57829003601f168201915b505050505097508680546106ce90610e35565b80601f01602080910402602001604051908101604052809291908181526020018280546106fa90610e35565b80156107475780601f1061071c57610100808354040283529160200191610747565b820191906000526020600020905b81548152906001019060200180831161072a57829003601f168201915b5050505050965085805461075a90610e35565b80601f016020809104026020016040519081016040528092919081815260200182805461078690610e35565b80156107d35780601f106107a8576101008083540402835291602001916107d3565b820191906000526020600020905b8154815290600101906020018083116107b657829003601f168201915b505050505095508480546107e690610e35565b80601f016020809104026020016040519081016040528092919081815260200182805461081290610e35565b801561085f5780601f106108345761010080835404028352916020019161085f565b820191906000526020600020905b81548152906001019060200180831161084257829003601f168201915b5050505050945083805461087290610e35565b80601f016020809104026020016040519081016040528092919081815260200182805461089e90610e35565b80156108eb5780601f106108c0576101008083540402835291602001916108eb565b820191906000526020600020905b8154815290600101906020018083116108ce57829003601f168201915b505050505093508280546108fe90610e35565b80601f016020809104026020016040519081016040528092919081815260200182805461092a90610e35565b80156109775780601f1061094c57610100808354040283529160200191610977565b820191906000526020600020905b81548152906001019060200180831161095a57829003601f168201915b505050505092509a509a509a509a509a509a509a509a509a509a509a50909192939495969798999a565b600280546109ae90610e35565b80601f01602080910402602001604051908101604052809291908181526020018280546109da90610e35565b8015610a275780601f106109fc57610100808354040283529160200191610a27565b820191906000526020600020905b815481529060010190602001808311610a0a57829003601f168201915b505050505081565b600a5481565b60088054610a4290610e35565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6e90610e35565b8015610abb5780601f10610a9057610100808354040283529160200191610abb565b820191906000526020600020905b815481529060010190602001808311610a9e57829003601f168201915b505050505081565b60078054610ad090610e35565b80601f0160208091040260200160405190810160405280929190818152602001828054610afc90610e35565b8015610b495780601f10610b1e57610100808354040283529160200191610b49565b820191906000526020600020905b815481529060010190602001808311610b2c57829003601f168201915b505050505081565b60048054610b5e90610e35565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8a90610e35565b8015610bd75780601f10610bac57610100808354040283529160200191610bd7565b820191906000526020600020905b815481529060010190602001808311610bba57829003601f168201915b505050505081565b60068054610bec90610e35565b80601f0160208091040260200160405190810160405280929190818152602001828054610c1890610e35565b8015610c655780601f10610c3a57610100808354040283529160200191610c65565b820191906000526020600020905b815481529060010190602001808311610c4857829003601f168201915b505050505081565b6000610c7882610ddc565b610c828185610de7565b9350610c92818560208601610e02565b610c9b81610e96565b840191505092915050565b610caf81610df8565b82525050565b60006020820190508181036000830152610ccf8184610c6d565b905092915050565b6000610160820190508181036000830152610cf2818e610c6d565b90508181036020830152610d06818d610c6d565b90508181036040830152610d1a818c610c6d565b90508181036060830152610d2e818b610c6d565b90508181036080830152610d42818a610c6d565b905081810360a0830152610d568189610c6d565b905081810360c0830152610d6a8188610c6d565b905081810360e0830152610d7e8187610c6d565b9050818103610100830152610d938186610c6d565b9050610da3610120830185610ca6565b610db1610140830184610ca6565b9c9b505050505050505050505050565b6000602082019050610dd66000830184610ca6565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b60005b83811015610e20578082015181840152602081019050610e05565b83811115610e2f576000848401525b50505050565b60006002820490506001821680610e4d57607f821691505b60208210811415610e6157610e60610e67565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f830116905091905056fea2646970667358221220113ffe79318a6446de1ee76743e8593da0258b8181cd111b554a90dcb1e038c464736f6c63430008070033";

type AssociationContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssociationContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AssociationContract__factory extends ContractFactory {
  constructor(...args: AssociationContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _description: string,
    _email: string,
    _phoneNumber: string,
    _country: string,
    _streetAddress: string,
    _city: string,
    _state: string,
    _postalCode: string,
    _creationDate: BigNumberish,
    _size: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _description,
      _email,
      _phoneNumber,
      _country,
      _streetAddress,
      _city,
      _state,
      _postalCode,
      _creationDate,
      _size,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _description: string,
    _email: string,
    _phoneNumber: string,
    _country: string,
    _streetAddress: string,
    _city: string,
    _state: string,
    _postalCode: string,
    _creationDate: BigNumberish,
    _size: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _description,
      _email,
      _phoneNumber,
      _country,
      _streetAddress,
      _city,
      _state,
      _postalCode,
      _creationDate,
      _size,
      overrides || {}
    ) as Promise<
      AssociationContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): AssociationContract__factory {
    return super.connect(runner) as AssociationContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssociationContractInterface {
    return new Interface(_abi) as AssociationContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AssociationContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as AssociationContract;
  }
}
