/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../../../../../common";
import type {
  Token,
  TokenInterface,
} from "../../../../../../src/services/blockchain/contracts/Campaign/Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60406080815262000c57803803806200001881620003e1565b9283398101606082820312620003dc57815191602091828201519160018060401b0392838111620003dc57826200005191830162000407565b9186820151848111620003dc576200006a920162000407565b918151818111620002dc576003908154906001948583811c93168015620003d1575b88841014620003bb578190601f9384811162000365575b508890848311600114620002fe57600092620002f2575b505060001982851b1c191690851b1782555b8451928311620002dc5760049485548581811c91168015620002d1575b88821014620002bc5782811162000271575b50869184116001146200020657938394918492600095620001fa575b50501b92600019911b1c19161781555b3315620001e35760058054336001600160a01b0319821681179092556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360025490838201809211620001ce57506000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9160025533835282815284832084815401905584519384523393a3516107dd90816200047a8239f35b601190634e487b7160e01b6000525260246000fd5b6024906000855191631e4fbdf760e01b8352820152fd5b01519350388062000117565b9190601f198416928660005284886000209460005b8a898383106200025957505050106200023e575b50505050811b01815562000127565b01519060f884600019921b161c19169055388080806200022f565b8686015189559097019694850194889350016200021b565b86600052876000208380870160051c8201928a8810620002b2575b0160051c019086905b828110620002a5575050620000fb565b6000815501869062000295565b925081926200028c565b602287634e487b7160e01b6000525260246000fd5b90607f1690620000e9565b634e487b7160e01b600052604160045260246000fd5b015190503880620000ba565b90879350601f19831691866000528a6000209260005b8c8282106200034e575050841162000335575b505050811b018255620000cc565b015160001983871b60f8161c1916905538808062000327565b8385015186558b9790950194938401930162000314565b90915084600052886000208480850160051c8201928b8610620003b1575b918991869594930160051c01915b828110620003a1575050620000a3565b6000815585945089910162000391565b9250819262000383565b634e487b7160e01b600052602260045260246000fd5b92607f16926200008c565b600080fd5b6040519190601f01601f191682016001600160401b03811183821017620002dc57604052565b919080601f84011215620003dc5782516001600160401b038111620002dc576020906200043d601f8201601f19168301620003e1565b92818452828287010111620003dc5760005b8181106200046557508260009394955001015290565b85810183015184820184015282016200044f56fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde031461054b57508063095ea7b3146104a257806318160ddd1461048357806323b872dd14610390578063313ce5671461037457806370a082311461033d578063715018a6146102dd5780638da5cb5b146102b457806395d89b41146101b1578063a9059cbb14610180578063dd62ed3e146101335763f2fde38b146100a757600080fd5b3461012f57602036600319011261012f576100c061066c565b906100c961069d565b6001600160a01b03918216928315610119575050600580546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b50503461017c578060031936011261017c578060209261015161066c565b610159610687565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50503461017c578060031936011261017c576020906101aa6101a061066c565b60243590336106c9565b5160018152f35b5091903461017c578160031936011261017c57805190828454600181811c908083169283156102aa575b60209384841081146102975783885290811561027b5750600114610243575b505050829003601f01601f191682019267ffffffffffffffff841183851017610230575082918261022c925282610623565b0390f35b634e487b7160e01b815260418552602490fd5b919250868652828620918387935b83851061026757505050508301013880806101fa565b805488860183015293019284908201610251565b60ff1916878501525050151560051b84010190503880806101fa565b634e487b7160e01b895260228a52602489fd5b91607f16916101db565b50503461017c578160031936011261017c5760055490516001600160a01b039091168152602090f35b833461033a578060031936011261033a576102f661069d565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50503461017c57602036600319011261017c5760209181906001600160a01b0361036561066c565b16815280845220549051908152f35b50503461017c578160031936011261017c576020905160128152f35b50823461033a57606036600319011261033a576103ab61066c565b6103b3610687565b916044359360018060a01b0383168083526001602052868320338452602052868320549160001983036103ef575b6020886101aa8989896106c9565b868310610457578115610440573315610429575082526001602090815286832033845281529186902090859003905582906101aa876103e1565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b50503461017c578160031936011261017c576020906002549051908152f35b503461012f578160031936011261012f576104bb61066c565b602435903315610534576001600160a01b031691821561051d57508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b849150833461012f578260031936011261012f5782600354600181811c90808316928315610619575b6020938484108114610297578388529081156105fd57506001146105c457505050829003601f01601f191682019267ffffffffffffffff841183851017610230575082918261022c925282610623565b91925060038652828620918387935b8385106105e957505050508301018580806101fa565b8054888601830152930192849082016105d3565b60ff1916878501525050151560051b84010190508580806101fa565b91607f1691610574565b6020808252825181830181905290939260005b82811061065857505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610636565b600435906001600160a01b038216820361068257565b600080fd5b602435906001600160a01b038216820361068257565b6005546001600160a01b031633036106b157565b60405163118cdaa760e01b8152336004820152602490fd5b916001600160a01b0380841692831561078e57169283156107755760009083825281602052604082205490838210610743575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fdfea26469706673582212208611c59ba4f090d525d6c1cd4f030806f7c3555d90e40b4a2f85cea6a22d34eb64736f6c63430008140033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialSupply: BigNumberish,
    name: string,
    symbol: string,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialSupply,
      name,
      symbol,
      overrides || {}
    );
  }
  override deploy(
    initialSupply: BigNumberish,
    name: string,
    symbol: string,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initialSupply,
      name,
      symbol,
      overrides || {}
    ) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
