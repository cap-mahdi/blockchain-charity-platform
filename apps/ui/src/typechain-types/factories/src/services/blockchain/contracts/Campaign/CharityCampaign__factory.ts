/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../../common";
import type {
  CharityCampaign,
  CharityCampaignInterface,
} from "../../../../../../src/services/blockchain/contracts/Campaign/CharityCampaign";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "address",
        name: "_targetUser",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_targetAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_refundThreshold",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensIssued",
        type: "uint256",
      },
    ],
    name: "DonationReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RefundProcessed",
    type: "event",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "donations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refundThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requestRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "targetAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetUser",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDonations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234620003a35762000cae803803806200001d81620003a8565b928339810160e082820312620003a35781516001600160401b039290838111620003a357826200004f918301620003ce565b926020928383015190828211620003a3576200006d918401620003ce565b916200007c6040820162000440565b94606082015192608083015195620000a560c06200009d60a0870162000440565b950162000440565b958351918383116200038d576000908154936001968786811c9616801562000382575b838710146200036e578190601f968781116200031b575b508390878311600114620002b7578592620002ab575b5050600019600383901b1c191690871b1782555b8251948511620002975785548681811c911680156200028c575b8282101462000278579081858796959493116200021f575b5080938511600114620001b8575092620001ac575b5050600019600383901b1c191690821b1790555b60018060a01b039384928360018060a01b0319971687600254161760025560035560055516836006541617600655169060075416176007556040516108589081620004568239f35b01519050388062000150565b868252808220879650939291601f198616915b828210620002055750508411620001eb575b505050811b01905562000164565b015160001960f88460031b161c19169055388080620001dd565b8484015186558897909501949384019390810190620001cb565b9091929394508683528183208580880160051c8201928489106200026e575b9188978a9297969594930160051c01915b8281106200025f5750506200013b565b8481558897508991016200024f565b925081926200023e565b634e487b7160e01b83526022600452602483fd5b90607f169062000123565b634e487b7160e01b82526041600452602482fd5b015190503880620000f5565b8580528486208a94509190601f198416875b87828210620003045750508411620002ea575b505050811b01825562000109565b015160001960f88460031b161c19169055388080620002dc565b8385015186558d97909501949384019301620002c9565b9091508480528385208780850160051c82019286861062000364575b918b91869594930160051c01915b82811062000355575050620000df565b8781558594508b910162000345565b9250819262000337565b634e487b7160e01b84526022600452602484fd5b95607f1695620000c8565b634e487b7160e01b600052604160045260246000fd5b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200038d57604052565b919080601f84011215620003a35782516001600160401b0381116200038d5760209062000404601f8201601f19168301620003a8565b92818452828287010111620003a35760005b8181106200042c57508260009394955001015290565b858101830151848201840152820162000416565b51906001600160a01b0382168203620003a35756fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146106df5750816316fc4869146106c057816324600fc3146105d35781637284e416146104f15781638da5cb5b146104c8578163953b8fb8146104a9578163c255343e14610480578163cc6cb19a14610446578163d5cef13314610314578163de2ed893146102f6578163ed88c68e146100d4575063fc0c546a146100a957600080fd5b346100d057816003193601126100d05760075490516001600160a01b039091168152602090f35b5080fd5b9050826003193601126102f257341561029e5760035491821561024b5760075481516318160ddd60e01b81526020946001600160a01b03909216919085818681865afa908115610241578791610210575b5080340290348204036101fd57869186910492604485518094819363a9059cbb60e01b8352338a8401528760248401525af180156101f3576101b8575b507f4b0304ab2f313234b1cea012339c8f8c3bf2c8bb357d81a579cfdb35d2e3d030923386526008855282862061019a3482546107ff565b90556101a73482546107ff565b90558151933485528401523392a280f35b8481813d83116101ec575b6101cd818361077e565b810103126101e85751801515036101e45738610162565b8480fd5b8580fd5b503d6101c3565b83513d88823e3d90fd5b634e487b7160e01b875260118552602487fd5b90508581813d831161023a575b610227818361077e565b81010312610236575138610125565b8680fd5b503d61021d565b84513d89823e3d90fd5b906020608492519162461bcd60e51b8352820152602760248201527f54617267657420616d6f756e74206d7573742062652067726561746572207468604482015266616e207a65726f60c81b6064820152fd5b6020608492519162461bcd60e51b8352820152602960248201527f446f6e6174696f6e20616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152fd5b8280fd5b9050346102f257826003193601126102f25760209250549051908152f35b919050346102f257826003193601126102f2578154600354111561040b57338352600860205280832054156103cf5733835260086020528083209183835493558054908382039182116103bc575582808380156103b2575b8280929181923390f1156103a757519081527f3367befd2b2f39615cd79917c2153263c4af1d3945ec003e5d5bfc13a8d8583360203392a280f35b51913d9150823e3d90fd5b6108fc915061036c565b634e487b7160e01b855260119052602484fd5b906020606492519162461bcd60e51b83528201526016602482015275139bc8191bdb985d1a5bdb9cc81d1bc81c99599d5b9960521b6044820152fd5b906020606492519162461bcd60e51b8352820152601560248201527415185c99d95d08185b5bdd5b9d081c995858da1959605a1b6044820152fd5b9050346102f25760203660031901126102f257356001600160a01b038116908190036102f257828291602094526008845220549051908152f35b5050346100d057816003193601126100d05760025490516001600160a01b039091168152602090f35b5050346100d057816003193601126100d0576020906003549051908152f35b5050346100d057816003193601126100d05760065490516001600160a01b039091168152602090f35b919050346102f257826003193601126102f25780519183600180549182821c9282811680156105c9575b60209586861082146105b65750848852908115610594575060011461055a575b610556868661054c828b038361077e565b51918291826107b6565b0390f35b9295508083528583205b82841061058157505050826105569461054c92820101943861053b565b8054868501880152928601928101610564565b60ff191687860152505050151560051b830101925061054c826105563861053b565b634e487b7160e01b845260229052602483fd5b93607f169361051b565b9050346102f257826003193601126102f257805460035411610682576006546001600160a01b039190821633036106355750828080809360025416479082821561062c575bf115610622575080f35b51903d90823e3d90fd5b506108fc610618565b608490602084519162461bcd60e51b8352820152602160248201527f4f6e6c7920746865206f776e65722063616e2077697468647261772066756e646044820152607360f81b6064820152fd5b6020606492519162461bcd60e51b8352820152601960248201527815185c99d95d08185b5bdd5b9d081b9bdd081c995858da1959603a1b6044820152fd5b5050346100d057816003193601126100d0576020906005549051908152f35b9291503461077a578360031936011261077a578354600181811c9186908281168015610770575b60209586861082146105b65750848852908115610594575060011461073657610556868661054c828b038361077e565b8080949750528583205b82841061075d57505050826105569461054c92820101943861053b565b8054868501880152928601928101610740565b93607f1693610706565b8380fd5b90601f8019910116810190811067ffffffffffffffff8211176107a057604052565b634e487b7160e01b600052604160045260246000fd5b6020808252825181830181905290939260005b8281106107eb57505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016107c9565b9190820180921161080c57565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220fda223fe4bcff3cfdf7edb113df752598f8e9605d96bd765418ef71922c51ffa64736f6c63430008140033";

type CharityCampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CharityCampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CharityCampaign__factory extends ContractFactory {
  constructor(...args: CharityCampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _description: string,
    _targetUser: AddressLike,
    _targetAmount: BigNumberish,
    _refundThreshold: BigNumberish,
    _owner: AddressLike,
    _tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _description,
      _targetUser,
      _targetAmount,
      _refundThreshold,
      _owner,
      _tokenAddress,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _description: string,
    _targetUser: AddressLike,
    _targetAmount: BigNumberish,
    _refundThreshold: BigNumberish,
    _owner: AddressLike,
    _tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _description,
      _targetUser,
      _targetAmount,
      _refundThreshold,
      _owner,
      _tokenAddress,
      overrides || {}
    ) as Promise<
      CharityCampaign & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CharityCampaign__factory {
    return super.connect(runner) as CharityCampaign__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CharityCampaignInterface {
    return new Interface(_abi) as CharityCampaignInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CharityCampaign {
    return new Contract(address, _abi, runner) as unknown as CharityCampaign;
  }
}
