{
  "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "acceptDemand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_phoneNumber",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_country",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_streetAddress",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_city",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_state",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_postalCode",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_creationDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_size",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_domain",
          "type": "string"
        }
      ],
      "name": "addDemand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "admins",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_associationAddress",
          "type": "address"
        },
        {
          "internalType": "enum AssociationFactory.Status",
          "name": "_status",
          "type": "uint8"
        }
      ],
      "name": "changeAssociationStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "demands",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "email",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "phoneNumber",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "country",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "streetAddress",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "city",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "state",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "postalCode",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "creationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "size",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "domain",
              "type": "string"
            }
          ],
          "internalType": "struct PlateformContract.Association",
          "name": "association",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "enum PlateformContract.Status",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllDemands",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "email",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "phoneNumber",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "country",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "streetAddress",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "city",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "state",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "postalCode",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "creationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "size",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "domain",
                  "type": "string"
                }
              ],
              "internalType": "struct PlateformContract.Association",
              "name": "association",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "enum PlateformContract.Status",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct PlateformContract.Demand[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAssociationFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "refuseDemand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_associationFactory",
          "type": "address"
        }
      ],
      "name": "setAssociationFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xcf35b9afa0d05d5ce2ca25f1950293d0b83f2a4947c5bd0311a6c5a056574a1b",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
    "transactionIndex": 0,
    "gasUsed": "1629986",
    "logsBloom": "0x
    "blockHash": "0x261785261f62ec35f7b0fc0ec933101c23513db4a848a574207663c2ba076d02",
    "transactionHash": "0xcf35b9afa0d05d5ce2ca25f1950293d0b83f2a4947c5bd0311a6c5a056574a1b",
    "logs": [],
    "blockNumber": 8,
    "cumulativeGasUsed": "1629986",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "697be7d26e07475fdee2f3120f225e58",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"acceptDemand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_phoneNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_streetAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_postalCode\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_creationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_domain\",\"type\":\"string\"}],\"name\":\"addDemand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_associationAddress\",\"type\":\"address\"},{\"internalType\":\"enum AssociationFactory.Status\",\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"changeAssociationStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"demands\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"phoneNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"streetAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"postalCode\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"creationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"}],\"internalType\":\"struct PlateformContract.Association\",\"name\":\"association\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"enum PlateformContract.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllDemands\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"phoneNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"streetAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"postalCode\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"creationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"}],\"internalType\":\"struct PlateformContract.Association\",\"name\":\"association\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"enum PlateformContract.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct PlateformContract.Demand[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssociationFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"refuseDemand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_associationFactory\",\"type\":\"address\"}],\"name\":\"setAssociationFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/services/blockchain/contracts/Plateform.sol\":\"PlateformContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/services/blockchain/contracts/Association/Association.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\ncontract AssociationContract {\\n    // State variables to hold the association details\\n    string public name;\\n    string public description;\\n    string public email;\\n    string public phoneNumber;\\n    string public country;\\n    string public streetAddress;\\n    string public city;\\n    string public state;\\n    string public postalCode;\\n    uint256 public creationDate; // Custom creation date for the association\\n    uint256 public size;\\n\\n    // Event to be emitted when the association contract is deployed\\n    event AssociationContractDeployed(\\n        string name,\\n        string description,\\n        string email,\\n        string phoneNumber,\\n        string country,\\n        string streetAddress,\\n        string city,\\n        string state,\\n        string postalCode,\\n        uint256 creationDate,\\n        uint256 size\\n    );\\n\\n    // Constructor to initialize the association details\\n    constructor(\\n        string memory _name,\\n        string memory _description,\\n        string memory _email,\\n        string memory _phoneNumber,\\n        string memory _country,\\n        string memory _streetAddress,\\n        string memory _city,\\n        string memory _state,\\n        string memory _postalCode,\\n        uint256 _creationDate, // Custom creation date parameter\\n        uint256 _size\\n            ) {\\n        name = _name;\\n        description = _description;\\n        email = _email;\\n        phoneNumber = _phoneNumber;\\n        country = _country;\\n        streetAddress = _streetAddress;\\n        city = _city;\\n        state = _state;\\n        postalCode = _postalCode;\\n        creationDate = _creationDate; // Assign custom creation date\\n        size = _size;\\n\\n        emit AssociationContractDeployed(\\n            _name,\\n            _description,\\n            _email,\\n            _phoneNumber,\\n            _country,\\n            _streetAddress,\\n            _city,\\n            _state,\\n            _postalCode,\\n            _creationDate, // Emit custom creation date\\n            _size\\n        );\\n    }\\n\\n    // Function to get the association details\\n    function getAssociationDetails() public view returns (\\n        string memory _name,\\n        string memory _description,\\n        string memory _email,\\n        string memory _phoneNumber,\\n        string memory _country,\\n        string memory _streetAddress,\\n        string memory _city,\\n        string memory _state,\\n        string memory _postalCode,\\n        uint256 _creationDate,\\n        uint256 _size\\n    ) {\\n        return (\\n            name,\\n            description,\\n            email,\\n            phoneNumber,\\n            country,\\n            streetAddress,\\n            city,\\n            state,\\n            postalCode,\\n            creationDate,\\n            size\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x84df1766e9fb101ec794e9d9bcf60dcf54b1e7392fbf219b75d32e29df45e27b\",\"license\":\"MIT\"},\"src/services/blockchain/contracts/Association/AssociationFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.20;\\n\\nimport \\\"./Association.sol\\\";\\n\\ncontract AssociationFactory {\\n    event AssociationContractDeployed(address indexed associationContract, address indexed creator);\\n\\n    address public plateformAddress;\\n\\n    enum Status {\\n        Active,\\n        InActive\\n    }\\n\\n    struct AssociationInfo {\\n        address associationAddress;\\n        Status status;\\n    }\\n\\n    mapping(address => Status) public associations;\\n    address[] public associationsArray;\\n    uint public associationsCount;\\n\\n    constructor(address _plateformCAddress) {\\n        plateformAddress = _plateformCAddress;\\n    }\\n\\n    function getAssociationsWithStatus() public view returns (AssociationInfo[] memory) {\\n        AssociationInfo[] memory associationInfoArray = new AssociationInfo[](associationsCount);\\n        for (uint i = 0; i < associationsArray.length; i++) {\\n            address associationAddress = associationsArray[i];\\n            associationInfoArray[i] = AssociationInfo({\\n                associationAddress: associationAddress,\\n                status: associations[associationAddress]\\n            });\\n        }\\n        return associationInfoArray;\\n    }\\n\\n    function deployAssociationContract(\\n        string memory _name,\\n        string memory _description,\\n        string memory _email,\\n        string memory _phoneNumber,\\n        string memory _country,\\n        string memory _streetAddress,\\n        string memory _city,\\n        string memory _state,\\n        string memory _postalCode,\\n        uint256 _creationDate,\\n        uint256 _size\\n    ) external onlyAdmin returns (address) {\\n        AssociationContract newContract = new AssociationContract(\\n            _name,\\n            _description,\\n            _email,\\n            _phoneNumber,\\n            _country,\\n            _streetAddress,\\n            _city,\\n            _state,\\n            _postalCode,\\n            _creationDate,\\n            _size\\n        );\\n        associations[address(newContract)] = Status.Active;\\n        associationsArray.push(address(newContract));\\n        associationsCount++;\\n\\n        emit AssociationContractDeployed(address(newContract), msg.sender);\\n\\n        return address(newContract);\\n    }\\n\\n    function setPlateformAddress(address _plateformAddress) external onlyAdmin {\\n        plateformAddress = _plateformAddress;\\n    }\\n\\n    function changeAssociationStatus(address _associationAddress, Status _status) external onlyAdmin {\\n        associations[_associationAddress] = _status;\\n    }\\n\\n    modifier onlyAdmin {\\n        require(plateformAddress == msg.sender, \\\"Only admin can call this function\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xf4b3e2d13f3cb10d6cf2735b23e0d8cc0e8daa448582f1f6660c2bed0c5bfce9\",\"license\":\"MIT\"},\"src/services/blockchain/contracts/Plateform.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"./Association/AssociationFactory.sol\\\";\\n\\ncontract PlateformContract {\\n    struct Association {\\n        string name;\\n        string description;\\n        string email;\\n        string phoneNumber;\\n        string country;\\n        string streetAddress;\\n        string city;\\n        string state;\\n        string postalCode;\\n        uint256 creationDate;\\n        uint256 size;\\n        string domain;\\n    }\\n\\n    enum Status {\\n        Pending,\\n        Refused\\n    }\\n\\n    struct Demand {\\n        Association association;\\n        address owner;\\n        Status status;\\n    }\\n\\n    Demand[] public demands;\\n    address[] public admins;\\n    AssociationFactory private associationFactory;\\n\\n    constructor() {\\n        admins.push(msg.sender);\\n    }\\n\\n    function getAllDemands() public view returns (Demand[] memory) {\\n        return demands;\\n    }\\n\\n    function setAssociationFactory(address _associationFactory) public onlyAdmin {\\n        associationFactory =  AssociationFactory(_associationFactory);\\n    }\\n    function getAssociationFactory() public view returns (address) {\\n        return address(associationFactory);\\n    }\\n\\n    function addAdmin(address _admin) public onlyAdmin {\\n        admins.push(_admin);\\n    }\\n\\n    function refuseDemand(uint256 _index) public onlyAdmin {\\n        demands[_index].status = Status.Refused;\\n    }\\n\\n    function acceptDemand(uint256 _index) public onlyAdmin {\\n        require(_index < demands.length, \\\"Demand index out of bounds\\\");\\n        \\n        Demand memory demandToRemove = demands[_index];\\n        demands[_index] = demands[demands.length - 1];\\n        demands.pop();\\n\\n        Association memory association = demandToRemove.association;\\n        associationFactory.deployAssociationContract(\\n            association.name,\\n            association.description,\\n            association.email,\\n            association.phoneNumber,\\n            association.country,\\n            association.streetAddress,\\n            association.city,\\n            association.state,\\n            association.postalCode,\\n            association.creationDate,\\n            association.size\\n        );\\n    }\\n\\n    function addDemand(\\n        string memory _name,\\n        string memory _description,\\n        string memory _email,\\n        string memory _phoneNumber,\\n        string memory _country,\\n        string memory _streetAddress,\\n        string memory _city,\\n        string memory _state,\\n        string memory _postalCode,\\n        uint256 _creationDate,\\n        uint256 _size,\\n        string memory _domain\\n    ) public {\\n        Association memory newAssociation = Association({\\n            name: _name,\\n            description: _description,\\n            email: _email,\\n            phoneNumber: _phoneNumber,\\n            country: _country,\\n            streetAddress: _streetAddress,\\n            city: _city,\\n            state: _state,\\n            postalCode: _postalCode,\\n            creationDate: _creationDate,\\n            size: _size,\\n            domain: _domain\\n        });\\n\\n        Demand memory newDemand = Demand({\\n            association: newAssociation,\\n            owner: msg.sender,\\n            status: Status.Pending\\n        });\\n\\n        demands.push(newDemand);\\n    }\\n\\n    function changeAssociationStatus(address _associationAddress, AssociationFactory.Status _status) public onlyAdmin {\\n        associationFactory.changeAssociationStatus(_associationAddress, _status);\\n    }\\n\\n    modifier onlyAdmin {\\n        bool isAdmin = false;\\n        for (uint i = 0; i < admins.length; i++) {\\n            if (admins[i] == msg.sender) {\\n                isAdmin = true;\\n                break;\\n            }\\n        }\\n\\n        require(isAdmin, \\\"Only admins can call this function\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x2f7d5faf9b34b6cbebd976203d28a93f2106606357127820b5c19561781a744e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 434,
        "contract": "src/services/blockchain/contracts/Plateform.sol:PlateformContract",
        "label": "demands",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_struct(Demand)430_storage)dyn_storage"
      },
      {
        "astId": 437,
        "contract": "src/services/blockchain/contracts/Plateform.sol:PlateformContract",
        "label": "admins",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 440,
        "contract": "src/services/blockchain/contracts/Plateform.sol:PlateformContract",
        "label": "associationFactory",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AssociationFactory)390"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Demand)430_storage)dyn_storage": {
        "base": "t_struct(Demand)430_storage",
        "encoding": "dynamic_array",
        "label": "struct PlateformContract.Demand[]",
        "numberOfBytes": "32"
      },
      "t_contract(AssociationFactory)390": {
        "encoding": "inplace",
        "label": "contract AssociationFactory",
        "numberOfBytes": "20"
      },
      "t_enum(Status)421": {
        "encoding": "inplace",
        "label": "enum PlateformContract.Status",
        "numberOfBytes": "1"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Association)418_storage": {
        "encoding": "inplace",
        "label": "struct PlateformContract.Association",
        "members": [
          {
            "astId": 395,
            "contract": "src/services/blockchain/contracts/Plateform.sol:PlateformContract",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 397,
            "contract": "src/services/blockchain/contracts/Plateform.sol:PlateformContract",
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 399,
            "contract": "src/services/blockchain/contracts/Plateform.sol:PlateformContract",
            "label": "email",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 401,
            "contract": "src/services/blockchain/contracts/Plateform.sol:PlateformContract",
            "label": "phoneNumber",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 403,
            "contract": "src/services/blockchain/contracts/Plateform.sol:PlateformContract",
            "label": "country",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 405,
            "contract": "src/services/blockchain/contracts/Plateform.sol:PlateformContract",
            "label": "streetAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 407,
            "contract": "src/services/blockchain/contracts/Plateform.sol:PlateformContract",
            "label": "city",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          },
          {
            "astId": 409,
            "contract": "src/services/blockchain/contracts/Plateform.sol:PlateformContract",
            "label": "state",
            "offset": 0,
            "slot": "7",
            "type": "t_string_storage"
          },
          {
            "astId": 411,
            "contract": "src/services/blockchain/contracts/Plateform.sol:PlateformContract",
            "label": "postalCode",
            "offset": 0,
            "slot": "8",
            "type": "t_string_storage"
          },
          {
            "astId": 413,
            "contract": "src/services/blockchain/contracts/Plateform.sol:PlateformContract",
            "label": "creationDate",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 415,
            "contract": "src/services/blockchain/contracts/Plateform.sol:PlateformContract",
            "label": "size",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 417,
            "contract": "src/services/blockchain/contracts/Plateform.sol:PlateformContract",
            "label": "domain",
            "offset": 0,
            "slot": "11",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_struct(Demand)430_storage": {
        "encoding": "inplace",
        "label": "struct PlateformContract.Demand",
        "members": [
          {
            "astId": 424,
            "contract": "src/services/blockchain/contracts/Plateform.sol:PlateformContract",
            "label": "association",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Association)418_storage"
          },
          {
            "astId": 426,
            "contract": "src/services/blockchain/contracts/Plateform.sol:PlateformContract",
            "label": "owner",
            "offset": 0,
            "slot": "12",
            "type": "t_address"
          },
          {
            "astId": 429,
            "contract": "src/services/blockchain/contracts/Plateform.sol:PlateformContract",
            "label": "status",
            "offset": 20,
            "slot": "12",
            "type": "t_enum(Status)421"
          }
        ],
        "numberOfBytes": "416"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}